CREATE TABLE IF NOT EXISTS candidate
(
    id         BIGINT GENERATED BY DEFAULT AS IDENTITY NOT NULL,
    first_name VARCHAR(255)                            NOT NULL,
    last_name  VARCHAR(255)                            NOT NULL,
    email      VARCHAR(255)                            NOT NULL,
    is_active  BOOLEAN,
    CONSTRAINT pk_candidate PRIMARY KEY (id)
) ;
CREATE TABLE IF NOT EXISTS candidate_version (
                                   id BIGINT NOT NULL,
                                   first_name VARCHAR(255) NOT NULL,
                                   last_name VARCHAR(255) NOT NULL,
                                   email VARCHAR(255) NOT NULL,
                                   is_active BOOLEAN,
                                   deleted_at TIMESTAMP NOT NULL DEFAULT CURRENT_TIMESTAMP,
                                   PRIMARY KEY (id, deleted_at)
);

CREATE TABLE IF NOT EXISTS interview_results
(
    id               BIGINT GENERATED BY DEFAULT AS IDENTITY NOT NULL,
    interview_status VARCHAR(255)                            NOT NULL CHECK (interview_status IN ('FAIL', 'PASS')),
    interview_date   TIMESTAMP                               NOT NULL,
    feedback         VARCHAR(2000)                           NOT NULL,
    candidate_id     BIGINT,
    CONSTRAINT pk_interview_results PRIMARY KEY (id)
);

CREATE TABLE IF NOT EXISTS sender_fail_log
(
    id           BIGINT GENERATED BY DEFAULT AS IDENTITY NOT NULL,
    fail_date    TIMESTAMP,
    fail_reason VARCHAR(2000),
    candidate_id BIGINT,
    CONSTRAINT pk_sender_fail_log PRIMARY KEY (id)
);

CREATE TRIGGER candidate_trigger
    BEFORE DELETE
    ON candidate
    FOR EACH ROW
CALL "ge.RecruitCandidateAutomation.trigger.CandidateTrigger";

ALTER TABLE interview_results
    ADD CONSTRAINT IF NOT EXISTS FK_INTERVIEW_RESULTS_ON_CANDIDATE FOREIGN KEY (candidate_id) REFERENCES candidate (id) ON DELETE CASCADE;

ALTER TABLE sender_fail_log
    ADD CONSTRAINT IF NOT EXISTS FK_SENDER_FAIL_LOG_ON_CANDIDATE FOREIGN KEY (candidate_id) REFERENCES candidate (id) ON DELETE CASCADE;

INSERT INTO candidate (first_name, last_name, email, is_active)
VALUES
    ('John', 'Doe', 'john.doe@gmail.com', true),
    ('Bob', 'Brown', 'bob.brown@gmail.com', true);


INSERT INTO interview_results (interview_status, interview_date, feedback, candidate_id)
VALUES
    ('PASS', '2024-12-01 10:00:00', 'Excellent technical skills and communication.', 1),
    ('FAIL', '2024-12-02 14:00:00', 'Lack of experience in required tools.', 2);

